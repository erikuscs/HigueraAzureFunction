"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/generatePdf";
exports.ids = ["pages/api/generatePdf"];
exports.modules = {

/***/ "@azure/identity":
/*!**********************************!*\
  !*** external "@azure/identity" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("@azure/identity");

/***/ }),

/***/ "@azure/monitor-query":
/*!***************************************!*\
  !*** external "@azure/monitor-query" ***!
  \***************************************/
/***/ ((module) => {

module.exports = require("@azure/monitor-query");

/***/ }),

/***/ "@microsoft/microsoft-graph-client":
/*!****************************************************!*\
  !*** external "@microsoft/microsoft-graph-client" ***!
  \****************************************************/
/***/ ((module) => {

module.exports = require("@microsoft/microsoft-graph-client");

/***/ }),

/***/ "@microsoft/microsoft-graph-client/authProviders/azureTokenCredentials":
/*!****************************************************************************************!*\
  !*** external "@microsoft/microsoft-graph-client/authProviders/azureTokenCredentials" ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = require("@microsoft/microsoft-graph-client/authProviders/azureTokenCredentials");

/***/ }),

/***/ "applicationinsights":
/*!**************************************!*\
  !*** external "applicationinsights" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("applicationinsights");

/***/ }),

/***/ "jspdf":
/*!************************!*\
  !*** external "jspdf" ***!
  \************************/
/***/ ((module) => {

module.exports = require("jspdf");

/***/ }),

/***/ "jspdf-autotable":
/*!**********************************!*\
  !*** external "jspdf-autotable" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("jspdf-autotable");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FgeneratePdf&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2FgeneratePdf.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FgeneratePdf&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2FgeneratePdf.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_generatePdf_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/generatePdf.js */ \"(api)/./pages/api/generatePdf.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_generatePdf_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_generatePdf_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/generatePdf\",\n        pathname: \"/api/generatePdf\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_generatePdf_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmdlbmVyYXRlUGRmJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZnZW5lcmF0ZVBkZi5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUN1RDtBQUN2RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsc0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHNEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2hpZ3VlcmFhenVyZWZ1bmN0aW9uLz9mZGQxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvZ2VuZXJhdGVQZGYuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9nZW5lcmF0ZVBkZlwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dlbmVyYXRlUGRmXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FgeneratePdf&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2FgeneratePdf.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/monitoringService.ts":
/*!**********************************!*\
  !*** ./lib/monitoringService.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   queryLogs: () => (/* binding */ queryLogs),\n/* harmony export */   startOperation: () => (/* binding */ startOperation),\n/* harmony export */   stopOperation: () => (/* binding */ stopOperation),\n/* harmony export */   trackDependency: () => (/* binding */ trackDependency),\n/* harmony export */   trackEvent: () => (/* binding */ trackEvent),\n/* harmony export */   trackException: () => (/* binding */ trackException),\n/* harmony export */   trackMetric: () => (/* binding */ trackMetric),\n/* harmony export */   trackRequest: () => (/* binding */ trackRequest)\n/* harmony export */ });\n// Use dynamic imports for server-only modules\n// These modules will only be imported on the server\n// Import placeholders for server-side modules\nlet appInsightsModule = null;\nlet DefaultAzureCredentialClass = null;\nlet LogAnalyticsClientClass = null;\n// Only import server-side modules when running on the server\nif (true) {\n    try {\n        appInsightsModule = __webpack_require__(/*! applicationinsights */ \"applicationinsights\");\n        const { DefaultAzureCredential } = __webpack_require__(/*! @azure/identity */ \"@azure/identity\");\n        const { LogAnalyticsClient } = __webpack_require__(/*! @azure/monitor-query */ \"@azure/monitor-query\");\n        DefaultAzureCredentialClass = DefaultAzureCredential;\n        LogAnalyticsClientClass = LogAnalyticsClient;\n    } catch (error) {\n        console.error(\"Error importing server-side modules:\", error);\n    }\n}\nclass MonitoringService {\n    constructor(){\n        this.initialized = false;\n        if (true) {\n            this.initializeAppInsights();\n            this.initializeLogAnalytics();\n        }\n    }\n    static getInstance() {\n        if (!MonitoringService.instance) {\n            MonitoringService.instance = new MonitoringService();\n        }\n        return MonitoringService.instance;\n    }\n    initializeAppInsights() {\n        if (!this.initialized && process.env.APPLICATIONINSIGHTS_CONNECTION_STRING && appInsightsModule) {\n            appInsightsModule.setup(process.env.APPLICATIONINSIGHTS_CONNECTION_STRING).setAutoDependencyCorrelation(true).setAutoCollectRequests(true).setAutoCollectPerformance(true).setAutoCollectExceptions(true).setAutoCollectDependencies(true).setAutoCollectConsole(true).setUseDiskRetryCaching(true).setSendLiveMetrics(true).setDistributedTracingMode(appInsightsModule.DistributedTracingModes.AI_AND_W3C);\n            appInsightsModule.defaultClient.context.tags[appInsightsModule.defaultClient.context.keys.cloudRole] = \"HigueraFunction\";\n            appInsightsModule.start();\n            this.client = appInsightsModule.defaultClient;\n            this.initialized = true;\n        }\n    }\n    initializeLogAnalytics() {\n        if (DefaultAzureCredentialClass && LogAnalyticsClientClass) {\n            try {\n                const credential = new DefaultAzureCredentialClass();\n                this.logAnalyticsClient = new LogAnalyticsClientClass(credential);\n            } catch (error) {\n                console.error(\"Error initializing Log Analytics client:\", error);\n            }\n        }\n    }\n    trackException(error, properties) {\n        if ( false || !this.initialized) {\n            return; // Skip on client-side\n        }\n        try {\n            const enhancedProperties = {\n                ...properties,\n                errorName: error.name,\n                stackTrace: error.stack,\n                timestamp: new Date().toISOString()\n            };\n            this.client.trackException({\n                exception: error,\n                properties: enhancedProperties\n            });\n        } catch (error) {\n            console.error(\"Error tracking exception:\", error);\n        }\n    }\n    trackEvent(name, properties) {\n        if ( false || !this.initialized) {\n            return; // Skip on client-side\n        }\n        try {\n            const enhancedProperties = {\n                ...properties,\n                timestamp: new Date().toISOString(),\n                environment: process.env.AZURE_ENVIRONMENT || \"development\"\n            };\n            this.client.trackEvent({\n                name,\n                properties: enhancedProperties\n            });\n        } catch (error) {\n            console.error(\"Error tracking event:\", error);\n        }\n    }\n    trackMetric(name, value, properties) {\n        if ( false || !this.initialized) {\n            return; // Skip on client-side\n        }\n        try {\n            const enhancedProperties = {\n                ...properties,\n                timestamp: new Date().toISOString(),\n                environment: process.env.AZURE_ENVIRONMENT || \"development\"\n            };\n            this.client.trackMetric({\n                name,\n                value,\n                properties: enhancedProperties\n            });\n        } catch (error) {\n            console.error(\"Error tracking metric:\", error);\n        }\n    }\n    trackRequest(name, url, duration, success, properties) {\n        if ( false || !this.initialized) {\n            return; // Skip on client-side\n        }\n        try {\n            const enhancedProperties = {\n                ...properties,\n                timestamp: new Date().toISOString(),\n                environment: process.env.AZURE_ENVIRONMENT || \"development\"\n            };\n            this.client.trackRequest({\n                name,\n                url,\n                duration,\n                success,\n                properties: enhancedProperties\n            });\n        } catch (error) {\n            console.error(\"Error tracking request:\", error);\n        }\n    }\n    trackDependency(name, data, duration, success, properties) {\n        if ( false || !this.initialized) {\n            return; // Skip on client-side\n        }\n        try {\n            const enhancedProperties = {\n                ...properties,\n                timestamp: new Date().toISOString(),\n                environment: process.env.AZURE_ENVIRONMENT || \"development\"\n            };\n            this.client.trackDependency({\n                name,\n                data,\n                duration,\n                success,\n                properties: enhancedProperties,\n                dependencyTypeName: \"HTTP\"\n            });\n        } catch (error) {\n            console.error(\"Error tracking dependency:\", error);\n        }\n    }\n    async queryLogs(query, timeRange) {\n        if ( false || !this.logAnalyticsClient) {\n            return null; // Skip on client-side\n        }\n        try {\n            const workspaceId = process.env.LOG_ANALYTICS_WORKSPACE_ID;\n            if (!workspaceId) {\n                throw new Error(\"LOG_ANALYTICS_WORKSPACE_ID not configured\");\n            }\n            const result = await this.logAnalyticsClient.queryWorkspace(workspaceId, query, {\n                timeRange\n            });\n            return result;\n        } catch (error) {\n            if (this.initialized) {\n                this.trackException(error, {\n                    operation: \"queryLogs\"\n                });\n            }\n            throw error;\n        }\n    }\n    startOperation(name) {\n        if ( false || !this.initialized) {\n            return null; // Skip on client-side\n        }\n        try {\n            return this.client.startOperation({\n                name\n            });\n        } catch (error) {\n            console.error(\"Error starting operation:\", error);\n            return null;\n        }\n    }\n    stopOperation(operation) {\n        if ( false || !this.initialized || !operation) {\n            return; // Skip on client-side\n        }\n        try {\n            this.client.stopOperation(operation);\n        } catch (error) {\n            console.error(\"Error stopping operation:\", error);\n        }\n    }\n}\n// Export singleton instance methods\nconst monitoringService = MonitoringService.getInstance();\nconst trackException = (error, properties)=>monitoringService.trackException(error, properties);\nconst trackEvent = (name, properties)=>monitoringService.trackEvent(name, properties);\nconst trackMetric = (name, value, properties)=>monitoringService.trackMetric(name, value, properties);\nconst trackRequest = (name, url, duration, success, properties)=>monitoringService.trackRequest(name, url, duration, success, properties);\nconst trackDependency = (name, data, duration, success, properties)=>monitoringService.trackDependency(name, data, duration, success, properties);\nconst queryLogs = (query, timeRange)=>monitoringService.queryLogs(query, timeRange);\nconst startOperation = (name)=>monitoringService.startOperation(name);\nconst stopOperation = (operation)=>monitoringService.stopOperation(operation);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/monitoringService.ts\n");

/***/ }),

/***/ "(api)/./pages/api/generatePdf.js":
/*!**********************************!*\
  !*** ./pages/api/generatePdf.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_monitoringService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/monitoringService */ \"(api)/./lib/monitoringService.ts\");\n// Server-only modules that will be imported conditionally\nlet MSGraphClient = null;\nlet TokenCredentialAuthProvider = null;\nlet DefaultAzureCredentialClass = null;\nlet jsPDFModule = null;\n// Only import server-side modules when running on the server\nif (true) {\n    try {\n        const { Client } = __webpack_require__(/*! @microsoft/microsoft-graph-client */ \"@microsoft/microsoft-graph-client\");\n        const { TokenCredentialAuthenticationProvider } = __webpack_require__(/*! @microsoft/microsoft-graph-client/authProviders/azureTokenCredentials */ \"@microsoft/microsoft-graph-client/authProviders/azureTokenCredentials\");\n        const { DefaultAzureCredential } = __webpack_require__(/*! @azure/identity */ \"@azure/identity\");\n        const jsPDF = __webpack_require__(/*! jspdf */ \"jspdf\");\n        __webpack_require__(/*! jspdf-autotable */ \"jspdf-autotable\");\n        MSGraphClient = Client;\n        TokenCredentialAuthProvider = TokenCredentialAuthenticationProvider;\n        DefaultAzureCredentialClass = DefaultAzureCredential;\n        jsPDFModule = jsPDF;\n    } catch (error) {\n        console.error(\"Error importing server-side modules:\", error);\n    }\n}\n\n// Utility function for consistent currency formatting - DO NOT REMOVE OR DUPLICATE\nfunction formatCurrency(number) {\n    return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n    }).format(number);\n}\nasync function handler(req, res) {\n    // This is an API route, which only runs on the server side\n    // But we still need to ensure the imports worked correctly\n    if (!jsPDFModule) {\n        return res.status(500).json({\n            error: \"Server-side modules not available\"\n        });\n    }\n    const startTime = performance.now();\n    try {\n        if (req.method !== \"POST\") {\n            throw new Error(\"Method not allowed\");\n        }\n        const { dashboardData, filters } = req.body;\n        if (!dashboardData) {\n            throw new Error(\"No dashboard data provided\");\n        }\n        const doc = new jsPDFModule();\n        // Header\n        doc.setFontSize(20);\n        doc.setTextColor(0, 51, 102);\n        doc.text(\"Higuera Project - Executive Summary\", 14, 20);\n        doc.setFontSize(10);\n        doc.setTextColor(100, 100, 100);\n        doc.text(`Generated on ${new Date().toLocaleDateString()}`, 14, 28);\n        if (filters && (filters.week || filters.system)) {\n            doc.text(`Filters: ${filters.week ? \"Week: \" + filters.week : \"\"} ${filters.system ? \"System: \" + filters.system : \"\"}`, 14, 35);\n        }\n        // KPIs\n        doc.setFontSize(14);\n        doc.setTextColor(0, 51, 102);\n        doc.text(\"Key Metrics\", 14, 45);\n        doc.autoTable({\n            startY: 50,\n            head: [\n                [\n                    \"Metric\",\n                    \"Value\"\n                ]\n            ],\n            body: [\n                [\n                    \"Total Budget\",\n                    formatCurrency(dashboardData.kpis.totalBudget)\n                ],\n                [\n                    \"Spent\",\n                    formatCurrency(dashboardData.kpis.spent)\n                ],\n                [\n                    \"Remaining\",\n                    formatCurrency(dashboardData.kpis.remaining)\n                ],\n                [\n                    \"Overrun Risk\",\n                    dashboardData.kpis.risk\n                ]\n            ],\n            theme: \"grid\",\n            headStyles: {\n                fillColor: [\n                    0,\n                    51,\n                    102\n                ]\n            }\n        });\n        // Hours Tracking section (new)\n        if (dashboardData.hoursTracking) {\n            const hoursY = doc.lastAutoTable.finalY + 15;\n            doc.setFontSize(14);\n            doc.setTextColor(0, 51, 102);\n            doc.text(\"Hours Tracking & Projections\", 14, hoursY);\n            doc.autoTable({\n                startY: hoursY + 5,\n                head: [\n                    [\n                        \"Metric\",\n                        \"Value\"\n                    ]\n                ],\n                body: [\n                    [\n                        \"Total Hours Allocated\",\n                        dashboardData.hoursTracking.totalHoursAllocated\n                    ],\n                    [\n                        \"Hours Used\",\n                        dashboardData.hoursTracking.totalHoursUsed\n                    ],\n                    [\n                        \"Hours Remaining\",\n                        dashboardData.hoursTracking.completionMetrics.hoursRemaining\n                    ],\n                    [\n                        \"Completion Percentage\",\n                        `${dashboardData.hoursTracking.completionMetrics.percentageComplete}%`\n                    ],\n                    [\n                        \"Planned End Date\",\n                        new Date(dashboardData.hoursTracking.plannedEndDate).toLocaleDateString()\n                    ],\n                    [\n                        \"Projected End Date\",\n                        new Date(dashboardData.hoursTracking.projectedEndDate).toLocaleDateString()\n                    ],\n                    [\n                        \"Estimated Weeks Remaining\",\n                        dashboardData.hoursTracking.completionMetrics.estimatedWeeksRemaining.toFixed(1)\n                    ]\n                ],\n                theme: \"grid\",\n                headStyles: {\n                    fillColor: [\n                        0,\n                        51,\n                        102\n                    ]\n                }\n            });\n        }\n        // Schedule Status\n        const scheduleY = doc.lastAutoTable.finalY + 15;\n        doc.setFontSize(14);\n        doc.setTextColor(0, 51, 102);\n        doc.text(\"Schedule Status\", 14, scheduleY);\n        doc.autoTable({\n            startY: scheduleY + 5,\n            head: [\n                [\n                    \"Task\",\n                    \"Planned %\",\n                    \"Actual %\"\n                ]\n            ],\n            body: dashboardData.schedule.map((item)=>[\n                    item.task,\n                    item.Planned,\n                    item.Actual\n                ]),\n            theme: \"grid\",\n            headStyles: {\n                fillColor: [\n                    0,\n                    51,\n                    102\n                ]\n            }\n        });\n        // Issues\n        if (doc.lastAutoTable.finalY > 230) {\n            doc.addPage();\n            doc.setFontSize(14);\n            doc.setTextColor(0, 51, 102);\n            doc.text(\"Recent Issues\", 14, 20);\n            doc.autoTable({\n                startY: 25,\n                head: [\n                    [\n                        \"Date\",\n                        \"System\",\n                        \"Issue\",\n                        \"Impact\",\n                        \"Accountability\"\n                    ]\n                ],\n                body: (filters.system ? dashboardData.issues.filter((i)=>i.system === filters.system) : dashboardData.issues).map((item)=>[\n                        item.date,\n                        item.system,\n                        item.issue,\n                        item.impact,\n                        item.accountability\n                    ]),\n                theme: \"grid\",\n                headStyles: {\n                    fillColor: [\n                        0,\n                        51,\n                        102\n                    ]\n                }\n            });\n        } else {\n            const issuesY = doc.lastAutoTable.finalY + 15;\n            doc.setFontSize(14);\n            doc.setTextColor(0, 51, 102);\n            doc.text(\"Recent Issues\", 14, issuesY);\n            doc.autoTable({\n                startY: issuesY + 5,\n                head: [\n                    [\n                        \"Date\",\n                        \"System\",\n                        \"Issue\",\n                        \"Impact\",\n                        \"Accountability\"\n                    ]\n                ],\n                body: (filters.system ? dashboardData.issues.filter((i)=>i.system === filters.system) : dashboardData.issues).map((item)=>[\n                        item.date,\n                        item.system,\n                        item.issue,\n                        item.impact,\n                        item.accountability\n                    ]),\n                theme: \"grid\",\n                headStyles: {\n                    fillColor: [\n                        0,\n                        51,\n                        102\n                    ]\n                }\n            });\n        }\n        // Footer\n        const pageCount = doc.internal.getNumberOfPages();\n        for(let i = 1; i <= pageCount; i++){\n            doc.setPage(i);\n            doc.setFontSize(8);\n            doc.setTextColor(150, 150, 150);\n            doc.text(`Higuera Project - Page ${i} of ${pageCount}`, 14, doc.internal.pageSize.height - 10);\n            doc.text(`Confidential - Ayala Development Inc.`, doc.internal.pageSize.width - 65, doc.internal.pageSize.height - 10);\n        }\n        const duration = performance.now() - startTime;\n        (0,_lib_monitoringService__WEBPACK_IMPORTED_MODULE_0__.trackMetric)(\"pdfGenerationDuration\", duration);\n        // Send the PDF\n        const pdfBuffer = Buffer.from(doc.output(\"arraybuffer\"));\n        res.setHeader(\"Content-Type\", \"application/pdf\");\n        res.setHeader(\"Content-Disposition\", `attachment; filename=higuera-summary-${new Date().toISOString().split(\"T\")[0]}.pdf`);\n        res.send(pdfBuffer);\n    } catch (error) {\n        console.error(\"PDF generation error:\", error);\n        (0,_lib_monitoringService__WEBPACK_IMPORTED_MODULE_0__.trackException)(error, {\n            operation: \"generatePdf\",\n            filters: JSON.stringify(req.body?.filters),\n            errorDetails: error.toString()\n        });\n        const statusCode = error.message === \"Method not allowed\" ? 405 : 500;\n        res.status(statusCode).json({\n            error: error.message,\n            timestamp: new Date().toISOString()\n        });\n    }\n} // End of file - No duplicate functions below this point\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/generatePdf.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FgeneratePdf&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2FgeneratePdf.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();