"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/exportExcel";
exports.ids = ["pages/api/exportExcel"];
exports.modules = {

/***/ "@azure/identity?e5d3":
/*!**********************************!*\
  !*** external "@azure/identity" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("@azure/identity");

/***/ }),

/***/ "@azure/monitor-query":
/*!***************************************!*\
  !*** external "@azure/monitor-query" ***!
  \***************************************/
/***/ ((module) => {

module.exports = require("@azure/monitor-query");

/***/ }),

/***/ "applicationinsights":
/*!**************************************!*\
  !*** external "applicationinsights" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("applicationinsights");

/***/ }),

/***/ "exceljs":
/*!**************************!*\
  !*** external "exceljs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("exceljs");

/***/ }),

/***/ "express-rate-limit":
/*!*************************************!*\
  !*** external "express-rate-limit" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("express-rate-limit");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "@azure/identity?132f":
/*!**********************************!*\
  !*** external "@azure/identity" ***!
  \**********************************/
/***/ ((module) => {

module.exports = import("@azure/identity");;

/***/ }),

/***/ "@azure/keyvault-secrets":
/*!******************************************!*\
  !*** external "@azure/keyvault-secrets" ***!
  \******************************************/
/***/ ((module) => {

module.exports = import("@azure/keyvault-secrets");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FexportExcel&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2FexportExcel.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FexportExcel&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2FexportExcel.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_exportExcel_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/exportExcel.js */ \"(api)/./pages/api/exportExcel.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_exportExcel_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_exportExcel_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_exportExcel_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_exportExcel_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/exportExcel\",\n        pathname: \"/api/exportExcel\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_exportExcel_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmV4cG9ydEV4Y2VsJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZleHBvcnRFeGNlbC5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUN1RDtBQUN2RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsc0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHNEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hpZ3VlcmFhenVyZWZ1bmN0aW9uLz9mYmZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvZXhwb3J0RXhjZWwuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9leHBvcnRFeGNlbFwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2V4cG9ydEV4Y2VsXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FexportExcel&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2FexportExcel.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/config.ts":
/*!***********************!*\
  !*** ./lib/config.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultMonitoringConfig: () => (/* binding */ defaultMonitoringConfig),\n/* harmony export */   defaultSecurityConfig: () => (/* binding */ defaultSecurityConfig),\n/* harmony export */   getSecretConfig: () => (/* binding */ getSecretConfig)\n/* harmony export */ });\n/* harmony import */ var _azure_identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/identity */ \"@azure/identity?132f\");\n/* harmony import */ var _azure_keyvault_secrets__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/keyvault-secrets */ \"@azure/keyvault-secrets\");\n/* harmony import */ var _monitoringService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./monitoringService */ \"(api)/./lib/monitoringService.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_azure_identity__WEBPACK_IMPORTED_MODULE_0__, _azure_keyvault_secrets__WEBPACK_IMPORTED_MODULE_1__]);\n([_azure_identity__WEBPACK_IMPORTED_MODULE_0__, _azure_keyvault_secrets__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst credential = new _azure_identity__WEBPACK_IMPORTED_MODULE_0__.DefaultAzureCredential();\nlet secretClient = null;\n// Initialize Key Vault client\nasync function initializeKeyVault() {\n    if (!secretClient && process.env.KEY_VAULT_URL) {\n        try {\n            secretClient = new _azure_keyvault_secrets__WEBPACK_IMPORTED_MODULE_1__.SecretClient(process.env.KEY_VAULT_URL, credential);\n        } catch (error) {\n            (0,_monitoringService__WEBPACK_IMPORTED_MODULE_2__.trackException)(error, {\n                service: \"KeyVault\"\n            });\n            throw error;\n        }\n    }\n}\n// Cache for secrets to reduce Key Vault calls\nconst secretsCache = new Map();\nconst CACHE_TTL = 3600000; // 1 hour\nasync function getSecretConfig(secretName) {\n    // Check cache first\n    const cached = secretsCache.get(secretName);\n    if (cached && Date.now() < cached.expiresAt) {\n        return cached.value;\n    }\n    // If not in cache or expired, get from Key Vault\n    try {\n        await initializeKeyVault();\n        if (!secretClient) {\n            return process.env[secretName];\n        }\n        const secret = await secretClient.getSecret(secretName);\n        // Update cache\n        secretsCache.set(secretName, {\n            value: secret.value,\n            expiresAt: Date.now() + CACHE_TTL\n        });\n        return secret.value;\n    } catch (error) {\n        (0,_monitoringService__WEBPACK_IMPORTED_MODULE_2__.trackException)(error, {\n            operation: \"getSecretConfig\",\n            secretName\n        });\n        // Fallback to environment variable\n        return process.env[secretName];\n    }\n}\nconst defaultSecurityConfig = {\n    maxRequestsPerMinute: 60,\n    jwtSecret: process.env.JWT_SECRET || \"your-default-secret\",\n    allowedOrigins: (process.env.CORS_ALLOWED_ORIGINS || \"\").split(\",\")\n};\nconst defaultMonitoringConfig = {\n    logLevel: process.env.LOG_LEVEL || \"info\",\n    sampleRate: Number(process.env.MONITORING_SAMPLE_RATE || \"1\")\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvY29uZmlnLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF5RDtBQUNGO0FBQ0Y7QUFFckQsTUFBTUcsYUFBYSxJQUFJSCxtRUFBc0JBO0FBQzdDLElBQUlJLGVBQW9DO0FBRXhDLDhCQUE4QjtBQUM5QixlQUFlQztJQUNYLElBQUksQ0FBQ0QsZ0JBQWdCRSxRQUFRQyxHQUFHLENBQUNDLGFBQWEsRUFBRTtRQUM1QyxJQUFJO1lBQ0FKLGVBQWUsSUFBSUgsaUVBQVlBLENBQUNLLFFBQVFDLEdBQUcsQ0FBQ0MsYUFBYSxFQUFFTDtRQUMvRCxFQUFFLE9BQU9NLE9BQU87WUFDWlAsa0VBQWNBLENBQUNPLE9BQWdCO2dCQUFFQyxTQUFTO1lBQVc7WUFDckQsTUFBTUQ7UUFDVjtJQUNKO0FBQ0o7QUFhQSw4Q0FBOEM7QUFDOUMsTUFBTUUsZUFBZSxJQUFJQztBQUN6QixNQUFNQyxZQUFZLFNBQVMsU0FBUztBQUU3QixlQUFlQyxnQkFBZ0JDLFVBQWtCO0lBQ3BELG9CQUFvQjtJQUNwQixNQUFNQyxTQUFTTCxhQUFhTSxHQUFHLENBQUNGO0lBQ2hDLElBQUlDLFVBQVVFLEtBQUtDLEdBQUcsS0FBS0gsT0FBT0ksU0FBUyxFQUFFO1FBQ3pDLE9BQU9KLE9BQU9LLEtBQUs7SUFDdkI7SUFFQSxpREFBaUQ7SUFDakQsSUFBSTtRQUNBLE1BQU1oQjtRQUNOLElBQUksQ0FBQ0QsY0FBYztZQUNmLE9BQU9FLFFBQVFDLEdBQUcsQ0FBQ1EsV0FBVztRQUNsQztRQUVBLE1BQU1PLFNBQVMsTUFBTWxCLGFBQWFtQixTQUFTLENBQUNSO1FBRTVDLGVBQWU7UUFDZkosYUFBYWEsR0FBRyxDQUFDVCxZQUFZO1lBQ3pCTSxPQUFPQyxPQUFPRCxLQUFLO1lBQ25CRCxXQUFXRixLQUFLQyxHQUFHLEtBQUtOO1FBQzVCO1FBRUEsT0FBT1MsT0FBT0QsS0FBSztJQUN2QixFQUFFLE9BQU9aLE9BQU87UUFDWlAsa0VBQWNBLENBQUNPLE9BQWdCO1lBQzNCZ0IsV0FBVztZQUNYVjtRQUNKO1FBQ0EsbUNBQW1DO1FBQ25DLE9BQU9ULFFBQVFDLEdBQUcsQ0FBQ1EsV0FBVztJQUNsQztBQUNKO0FBRU8sTUFBTVcsd0JBQXdDO0lBQ2pEQyxzQkFBc0I7SUFDdEJDLFdBQVd0QixRQUFRQyxHQUFHLENBQUNzQixVQUFVLElBQUk7SUFDckNDLGdCQUFnQixDQUFDeEIsUUFBUUMsR0FBRyxDQUFDd0Isb0JBQW9CLElBQUksRUFBQyxFQUFHQyxLQUFLLENBQUM7QUFDbkUsRUFBRTtBQUVLLE1BQU1DLDBCQUE0QztJQUNyREMsVUFBVzVCLFFBQVFDLEdBQUcsQ0FBQzRCLFNBQVMsSUFBSTtJQUNwQ0MsWUFBWUMsT0FBTy9CLFFBQVFDLEdBQUcsQ0FBQytCLHNCQUFzQixJQUFJO0FBQzdELEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oaWd1ZXJhYXp1cmVmdW5jdGlvbi8uL2xpYi9jb25maWcudHM/MTI4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZWZhdWx0QXp1cmVDcmVkZW50aWFsIH0gZnJvbSAnQGF6dXJlL2lkZW50aXR5JztcbmltcG9ydCB7IFNlY3JldENsaWVudCB9IGZyb20gJ0BhenVyZS9rZXl2YXVsdC1zZWNyZXRzJztcbmltcG9ydCB7IHRyYWNrRXhjZXB0aW9uIH0gZnJvbSAnLi9tb25pdG9yaW5nU2VydmljZSc7XG5cbmNvbnN0IGNyZWRlbnRpYWwgPSBuZXcgRGVmYXVsdEF6dXJlQ3JlZGVudGlhbCgpO1xubGV0IHNlY3JldENsaWVudDogU2VjcmV0Q2xpZW50IHwgbnVsbCA9IG51bGw7XG5cbi8vIEluaXRpYWxpemUgS2V5IFZhdWx0IGNsaWVudFxuYXN5bmMgZnVuY3Rpb24gaW5pdGlhbGl6ZUtleVZhdWx0KCkge1xuICAgIGlmICghc2VjcmV0Q2xpZW50ICYmIHByb2Nlc3MuZW52LktFWV9WQVVMVF9VUkwpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHNlY3JldENsaWVudCA9IG5ldyBTZWNyZXRDbGllbnQocHJvY2Vzcy5lbnYuS0VZX1ZBVUxUX1VSTCwgY3JlZGVudGlhbCk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB0cmFja0V4Y2VwdGlvbihlcnJvciBhcyBFcnJvciwgeyBzZXJ2aWNlOiAnS2V5VmF1bHQnIH0pO1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VjdXJpdHlDb25maWcge1xuICAgIG1heFJlcXVlc3RzUGVyTWludXRlOiBudW1iZXI7XG4gICAgand0U2VjcmV0OiBzdHJpbmc7XG4gICAgYWxsb3dlZE9yaWdpbnM6IHN0cmluZ1tdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1vbml0b3JpbmdDb25maWcge1xuICAgIGxvZ0xldmVsOiAnZXJyb3InIHwgJ3dhcm4nIHwgJ2luZm8nIHwgJ2RlYnVnJztcbiAgICBzYW1wbGVSYXRlOiBudW1iZXI7XG59XG5cbi8vIENhY2hlIGZvciBzZWNyZXRzIHRvIHJlZHVjZSBLZXkgVmF1bHQgY2FsbHNcbmNvbnN0IHNlY3JldHNDYWNoZSA9IG5ldyBNYXA8c3RyaW5nLCB7IHZhbHVlOiBzdHJpbmc7IGV4cGlyZXNBdDogbnVtYmVyIH0+KCk7XG5jb25zdCBDQUNIRV9UVEwgPSAzNjAwMDAwOyAvLyAxIGhvdXJcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlY3JldENvbmZpZyhzZWNyZXROYW1lOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZyB8IHVuZGVmaW5lZD4ge1xuICAgIC8vIENoZWNrIGNhY2hlIGZpcnN0XG4gICAgY29uc3QgY2FjaGVkID0gc2VjcmV0c0NhY2hlLmdldChzZWNyZXROYW1lKTtcbiAgICBpZiAoY2FjaGVkICYmIERhdGUubm93KCkgPCBjYWNoZWQuZXhwaXJlc0F0KSB7XG4gICAgICAgIHJldHVybiBjYWNoZWQudmFsdWU7XG4gICAgfVxuXG4gICAgLy8gSWYgbm90IGluIGNhY2hlIG9yIGV4cGlyZWQsIGdldCBmcm9tIEtleSBWYXVsdFxuICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGluaXRpYWxpemVLZXlWYXVsdCgpO1xuICAgICAgICBpZiAoIXNlY3JldENsaWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIHByb2Nlc3MuZW52W3NlY3JldE5hbWVdO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgc2VjcmV0ID0gYXdhaXQgc2VjcmV0Q2xpZW50LmdldFNlY3JldChzZWNyZXROYW1lKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFVwZGF0ZSBjYWNoZVxuICAgICAgICBzZWNyZXRzQ2FjaGUuc2V0KHNlY3JldE5hbWUsIHtcbiAgICAgICAgICAgIHZhbHVlOiBzZWNyZXQudmFsdWUhLFxuICAgICAgICAgICAgZXhwaXJlc0F0OiBEYXRlLm5vdygpICsgQ0FDSEVfVFRMXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBzZWNyZXQudmFsdWU7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgdHJhY2tFeGNlcHRpb24oZXJyb3IgYXMgRXJyb3IsIHtcbiAgICAgICAgICAgIG9wZXJhdGlvbjogJ2dldFNlY3JldENvbmZpZycsXG4gICAgICAgICAgICBzZWNyZXROYW1lXG4gICAgICAgIH0pO1xuICAgICAgICAvLyBGYWxsYmFjayB0byBlbnZpcm9ubWVudCB2YXJpYWJsZVxuICAgICAgICByZXR1cm4gcHJvY2Vzcy5lbnZbc2VjcmV0TmFtZV07XG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgZGVmYXVsdFNlY3VyaXR5Q29uZmlnOiBTZWN1cml0eUNvbmZpZyA9IHtcbiAgICBtYXhSZXF1ZXN0c1Blck1pbnV0ZTogNjAsXG4gICAgand0U2VjcmV0OiBwcm9jZXNzLmVudi5KV1RfU0VDUkVUIHx8ICd5b3VyLWRlZmF1bHQtc2VjcmV0JyxcbiAgICBhbGxvd2VkT3JpZ2luczogKHByb2Nlc3MuZW52LkNPUlNfQUxMT1dFRF9PUklHSU5TIHx8ICcnKS5zcGxpdCgnLCcpXG59O1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdE1vbml0b3JpbmdDb25maWc6IE1vbml0b3JpbmdDb25maWcgPSB7XG4gICAgbG9nTGV2ZWw6IChwcm9jZXNzLmVudi5MT0dfTEVWRUwgfHwgJ2luZm8nKSBhcyAnZXJyb3InIHwgJ3dhcm4nIHwgJ2luZm8nIHwgJ2RlYnVnJyxcbiAgICBzYW1wbGVSYXRlOiBOdW1iZXIocHJvY2Vzcy5lbnYuTU9OSVRPUklOR19TQU1QTEVfUkFURSB8fCAnMScpXG59OyJdLCJuYW1lcyI6WyJEZWZhdWx0QXp1cmVDcmVkZW50aWFsIiwiU2VjcmV0Q2xpZW50IiwidHJhY2tFeGNlcHRpb24iLCJjcmVkZW50aWFsIiwic2VjcmV0Q2xpZW50IiwiaW5pdGlhbGl6ZUtleVZhdWx0IiwicHJvY2VzcyIsImVudiIsIktFWV9WQVVMVF9VUkwiLCJlcnJvciIsInNlcnZpY2UiLCJzZWNyZXRzQ2FjaGUiLCJNYXAiLCJDQUNIRV9UVEwiLCJnZXRTZWNyZXRDb25maWciLCJzZWNyZXROYW1lIiwiY2FjaGVkIiwiZ2V0IiwiRGF0ZSIsIm5vdyIsImV4cGlyZXNBdCIsInZhbHVlIiwic2VjcmV0IiwiZ2V0U2VjcmV0Iiwic2V0Iiwib3BlcmF0aW9uIiwiZGVmYXVsdFNlY3VyaXR5Q29uZmlnIiwibWF4UmVxdWVzdHNQZXJNaW51dGUiLCJqd3RTZWNyZXQiLCJKV1RfU0VDUkVUIiwiYWxsb3dlZE9yaWdpbnMiLCJDT1JTX0FMTE9XRURfT1JJR0lOUyIsInNwbGl0IiwiZGVmYXVsdE1vbml0b3JpbmdDb25maWciLCJsb2dMZXZlbCIsIkxPR19MRVZFTCIsInNhbXBsZVJhdGUiLCJOdW1iZXIiLCJNT05JVE9SSU5HX1NBTVBMRV9SQVRFIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/config.ts\n");

/***/ }),

/***/ "(api)/./lib/middleware.ts":
/*!***************************!*\
  !*** ./lib/middleware.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ipRestriction: () => (/* binding */ ipRestriction),\n/* harmony export */   monitorPerformance: () => (/* binding */ monitorPerformance),\n/* harmony export */   rateLimiter: () => (/* binding */ rateLimiter),\n/* harmony export */   sanitizeInput: () => (/* binding */ sanitizeInput),\n/* harmony export */   validateContentType: () => (/* binding */ validateContentType),\n/* harmony export */   validateRequest: () => (/* binding */ validateRequest),\n/* harmony export */   withApiAuth: () => (/* binding */ withApiAuth)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"(api)/./lib/config.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_config__WEBPACK_IMPORTED_MODULE_0__]);\n_config__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Server-only modules that will be imported conditionally\nlet rateLimit = null;\nlet trackExceptionFn = null;\n// Only import server-side modules when running on the server\nif (true) {\n    try {\n        rateLimit = __webpack_require__(/*! express-rate-limit */ \"express-rate-limit\");\n        const { trackException } = __webpack_require__(/*! ./monitoringService */ \"(api)/./lib/monitoringService.ts\");\n        trackExceptionFn = trackException;\n    } catch (error) {\n        console.error(\"Error importing server-side modules:\", error);\n    }\n}\n// Rate limiting middleware - will only work on server side\nconst rateLimiter =  true && rateLimit ? rateLimit({\n    windowMs: 60 * 1000,\n    max: _config__WEBPACK_IMPORTED_MODULE_0__.defaultSecurityConfig.maxRequestsPerMinute\n}) : (req, res, next)=>{\n    if (next) next();\n};\n// IP restriction middleware\nfunction ipRestriction(context) {\n    const allowedIPs = process.env.ALLOWED_IPS?.split(\",\") || [];\n    const clientIP = context.req?.headers[\"x-forwarded-for\"] || context.req?.connection.remoteAddress;\n    if (allowedIPs.length === 0) return true; // No IP restrictions\n    const isAllowed = allowedIPs.some((ip)=>{\n        if (ip.includes(\"*\")) {\n            const pattern = ip.replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\");\n            return new RegExp(`^${pattern}$`).test(clientIP || \"\");\n        }\n        return ip === clientIP;\n    });\n    if (!isAllowed && \"undefined\" === \"undefined\" && trackExceptionFn) {\n        trackExceptionFn(new Error(\"IP restriction failed\"), {\n            clientIP: clientIP || \"unknown\",\n            source: context.executionContext.functionName\n        });\n    }\n    return isAllowed;\n}\n// Request validation middleware\nfunction validateRequest(context) {\n    const authHeader = context.req?.headers[\"authorization\"];\n    if (!authHeader) {\n        if ( true && trackExceptionFn) {\n            trackExceptionFn(new Error(\"Missing authorization header\"), {\n                source: context.executionContext.functionName\n            });\n        }\n        return false;\n    }\n    // Validate JWT token\n    try {\n        const token = authHeader.replace(\"Bearer \", \"\");\n        // Token validation logic would go here\n        // For now, just check if it exists\n        return !!token;\n    } catch (error) {\n        if ( true && trackExceptionFn) {\n            trackExceptionFn(error, {\n                source: context.executionContext.functionName\n            });\n        }\n        return false;\n    }\n}\n// Performance monitoring middleware\nfunction monitorPerformance(context, operationName) {\n    const startTime = Date.now();\n    return {\n        end: ()=>{\n            const duration = Date.now() - startTime;\n            if (context.log && typeof context.log.info === \"function\") {\n                context.log.info(\"Operation completed\", {\n                    name: operationName,\n                    duration,\n                    success: !context.res?.status || context.res.status < 400,\n                    functionName: context.executionContext?.functionName,\n                    invocationId: context.executionContext?.invocationId\n                });\n            }\n        }\n    };\n}\nfunction sanitizeInput(input) {\n    if (typeof input === \"string\") {\n        // Remove potential XSS content\n        return input.replace(/[<>]/g, \"\").replace(/javascript:/gi, \"\").replace(/on\\w+=/gi, \"\");\n    } else if (Array.isArray(input)) {\n        return input.map((item)=>sanitizeInput(item));\n    } else if (typeof input === \"object\" && input !== null) {\n        const sanitized = {};\n        for (const [key, value] of Object.entries(input)){\n            sanitized[key] = sanitizeInput(value);\n        }\n        return sanitized;\n    }\n    return input;\n}\nfunction validateContentType(context, expectedType) {\n    const contentType = context.req?.headers[\"content-type\"] || \"\";\n    return contentType.toLowerCase().includes(expectedType.toLowerCase());\n}\n// Auth middleware for Next.js API routes\nfunction withApiAuth(handler) {\n    return async (req, res)=>{\n        // Authentication logic would go here\n        // For now, just pass through\n        return handler(req, res);\n    };\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/middleware.ts\n");

/***/ }),

/***/ "(api)/./lib/monitoringService.ts":
/*!**********************************!*\
  !*** ./lib/monitoringService.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   queryLogs: () => (/* binding */ queryLogs),\n/* harmony export */   startOperation: () => (/* binding */ startOperation),\n/* harmony export */   stopOperation: () => (/* binding */ stopOperation),\n/* harmony export */   trackDependency: () => (/* binding */ trackDependency),\n/* harmony export */   trackEvent: () => (/* binding */ trackEvent),\n/* harmony export */   trackException: () => (/* binding */ trackException),\n/* harmony export */   trackMetric: () => (/* binding */ trackMetric),\n/* harmony export */   trackRequest: () => (/* binding */ trackRequest)\n/* harmony export */ });\n// Use dynamic imports for server-only modules\n// These modules will only be imported on the server\n// Import placeholders for server-side modules\nlet appInsightsModule = null;\nlet DefaultAzureCredentialClass = null;\nlet LogAnalyticsClientClass = null;\n// Only import server-side modules when running on the server\nif (true) {\n    try {\n        appInsightsModule = __webpack_require__(/*! applicationinsights */ \"applicationinsights\");\n        const { DefaultAzureCredential } = __webpack_require__(/*! @azure/identity */ \"@azure/identity?e5d3\");\n        const { LogAnalyticsClient } = __webpack_require__(/*! @azure/monitor-query */ \"@azure/monitor-query\");\n        DefaultAzureCredentialClass = DefaultAzureCredential;\n        LogAnalyticsClientClass = LogAnalyticsClient;\n    } catch (error) {\n        console.error(\"Error importing server-side modules:\", error);\n    }\n}\nclass MonitoringService {\n    constructor(){\n        this.initialized = false;\n        if (true) {\n            this.initializeAppInsights();\n            this.initializeLogAnalytics();\n        }\n    }\n    static getInstance() {\n        if (!MonitoringService.instance) {\n            MonitoringService.instance = new MonitoringService();\n        }\n        return MonitoringService.instance;\n    }\n    initializeAppInsights() {\n        if (!this.initialized && process.env.APPLICATIONINSIGHTS_CONNECTION_STRING && appInsightsModule) {\n            appInsightsModule.setup(process.env.APPLICATIONINSIGHTS_CONNECTION_STRING).setAutoDependencyCorrelation(true).setAutoCollectRequests(true).setAutoCollectPerformance(true).setAutoCollectExceptions(true).setAutoCollectDependencies(true).setAutoCollectConsole(true).setUseDiskRetryCaching(true).setSendLiveMetrics(true).setDistributedTracingMode(appInsightsModule.DistributedTracingModes.AI_AND_W3C);\n            appInsightsModule.defaultClient.context.tags[appInsightsModule.defaultClient.context.keys.cloudRole] = \"HigueraFunction\";\n            appInsightsModule.start();\n            this.client = appInsightsModule.defaultClient;\n            this.initialized = true;\n        }\n    }\n    initializeLogAnalytics() {\n        if (DefaultAzureCredentialClass && LogAnalyticsClientClass) {\n            try {\n                const credential = new DefaultAzureCredentialClass();\n                this.logAnalyticsClient = new LogAnalyticsClientClass(credential);\n            } catch (error) {\n                console.error(\"Error initializing Log Analytics client:\", error);\n            }\n        }\n    }\n    trackException(error, properties) {\n        if ( false || !this.initialized) {\n            return; // Skip on client-side\n        }\n        try {\n            const enhancedProperties = {\n                ...properties,\n                errorName: error.name,\n                stackTrace: error.stack,\n                timestamp: new Date().toISOString()\n            };\n            this.client.trackException({\n                exception: error,\n                properties: enhancedProperties\n            });\n        } catch (error) {\n            console.error(\"Error tracking exception:\", error);\n        }\n    }\n    trackEvent(name, properties) {\n        if ( false || !this.initialized) {\n            return; // Skip on client-side\n        }\n        try {\n            const enhancedProperties = {\n                ...properties,\n                timestamp: new Date().toISOString(),\n                environment: process.env.AZURE_ENVIRONMENT || \"development\"\n            };\n            this.client.trackEvent({\n                name,\n                properties: enhancedProperties\n            });\n        } catch (error) {\n            console.error(\"Error tracking event:\", error);\n        }\n    }\n    trackMetric(name, value, properties) {\n        if ( false || !this.initialized) {\n            return; // Skip on client-side\n        }\n        try {\n            const enhancedProperties = {\n                ...properties,\n                timestamp: new Date().toISOString(),\n                environment: process.env.AZURE_ENVIRONMENT || \"development\"\n            };\n            this.client.trackMetric({\n                name,\n                value,\n                properties: enhancedProperties\n            });\n        } catch (error) {\n            console.error(\"Error tracking metric:\", error);\n        }\n    }\n    trackRequest(name, url, duration, success, properties) {\n        if ( false || !this.initialized) {\n            return; // Skip on client-side\n        }\n        try {\n            const enhancedProperties = {\n                ...properties,\n                timestamp: new Date().toISOString(),\n                environment: process.env.AZURE_ENVIRONMENT || \"development\"\n            };\n            this.client.trackRequest({\n                name,\n                url,\n                duration,\n                success,\n                properties: enhancedProperties\n            });\n        } catch (error) {\n            console.error(\"Error tracking request:\", error);\n        }\n    }\n    trackDependency(name, data, duration, success, properties) {\n        if ( false || !this.initialized) {\n            return; // Skip on client-side\n        }\n        try {\n            const enhancedProperties = {\n                ...properties,\n                timestamp: new Date().toISOString(),\n                environment: process.env.AZURE_ENVIRONMENT || \"development\"\n            };\n            this.client.trackDependency({\n                name,\n                data,\n                duration,\n                success,\n                properties: enhancedProperties,\n                dependencyTypeName: \"HTTP\"\n            });\n        } catch (error) {\n            console.error(\"Error tracking dependency:\", error);\n        }\n    }\n    async queryLogs(query, timeRange) {\n        if ( false || !this.logAnalyticsClient) {\n            return null; // Skip on client-side\n        }\n        try {\n            const workspaceId = process.env.LOG_ANALYTICS_WORKSPACE_ID;\n            if (!workspaceId) {\n                throw new Error(\"LOG_ANALYTICS_WORKSPACE_ID not configured\");\n            }\n            const result = await this.logAnalyticsClient.queryWorkspace(workspaceId, query, {\n                timeRange\n            });\n            return result;\n        } catch (error) {\n            if (this.initialized) {\n                this.trackException(error, {\n                    operation: \"queryLogs\"\n                });\n            }\n            throw error;\n        }\n    }\n    startOperation(name) {\n        if ( false || !this.initialized) {\n            return null; // Skip on client-side\n        }\n        try {\n            return this.client.startOperation({\n                name\n            });\n        } catch (error) {\n            console.error(\"Error starting operation:\", error);\n            return null;\n        }\n    }\n    stopOperation(operation) {\n        if ( false || !this.initialized || !operation) {\n            return; // Skip on client-side\n        }\n        try {\n            this.client.stopOperation(operation);\n        } catch (error) {\n            console.error(\"Error stopping operation:\", error);\n        }\n    }\n}\n// Export singleton instance methods\nconst monitoringService = MonitoringService.getInstance();\nconst trackException = (error, properties)=>monitoringService.trackException(error, properties);\nconst trackEvent = (name, properties)=>monitoringService.trackEvent(name, properties);\nconst trackMetric = (name, value, properties)=>monitoringService.trackMetric(name, value, properties);\nconst trackRequest = (name, url, duration, success, properties)=>monitoringService.trackRequest(name, url, duration, success, properties);\nconst trackDependency = (name, data, duration, success, properties)=>monitoringService.trackDependency(name, data, duration, success, properties);\nconst queryLogs = (query, timeRange)=>monitoringService.queryLogs(query, timeRange);\nconst startOperation = (name)=>monitoringService.startOperation(name);\nconst stopOperation = (operation)=>monitoringService.stopOperation(operation);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/monitoringService.ts\n");

/***/ }),

/***/ "(api)/./pages/api/exportExcel.js":
/*!**********************************!*\
  !*** ./pages/api/exportExcel.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_middleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/middleware */ \"(api)/./lib/middleware.ts\");\n/* harmony import */ var _lib_monitoringService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/monitoringService */ \"(api)/./lib/monitoringService.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_middleware__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_middleware__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// Define server-only modules that will be imported conditionally\nlet fs = null;\nlet path = null;\nlet ExcelJS = null;\n// Only import server-side modules when running on the server\nif (true) {\n    try {\n        fs = __webpack_require__(/*! fs */ \"fs\");\n        path = __webpack_require__(/*! path */ \"path\");\n        ExcelJS = __webpack_require__(/*! exceljs */ \"exceljs\");\n    } catch (error) {\n        console.error(\"Error importing server-side modules:\", error);\n    }\n}\nasync function handler(req, res) {\n    // This is an API route, which only runs on the server side\n    // But we still need to ensure the imports worked correctly\n    if (!fs || !path || !ExcelJS) {\n        return res.status(500).json({\n            error: \"Server-side modules not available\"\n        });\n    }\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    const startTime = performance.now();\n    try {\n        // Read the data.json file\n        const dataPath = path.join(process.cwd(), \"public\", \"data\", \"data.json\");\n        const dataRaw = fs.readFileSync(dataPath, \"utf8\");\n        const data = JSON.parse(dataRaw);\n        // Create a new Excel workbook\n        const workbook = new ExcelJS.Workbook();\n        workbook.creator = \"Higuera Project Dashboard\";\n        workbook.lastModifiedBy = \"API\";\n        workbook.created = new Date();\n        workbook.modified = new Date();\n        // Project Overview Sheet\n        const overviewSheet = workbook.addWorksheet(\"Project Overview\");\n        overviewSheet.columns = [\n            {\n                header: \"Parameter\",\n                key: \"parameter\",\n                width: 25\n            },\n            {\n                header: \"Value\",\n                key: \"value\",\n                width: 15\n            },\n            {\n                header: \"Notes\",\n                key: \"notes\",\n                width: 40\n            }\n        ];\n        // Add project overview data\n        overviewSheet.addRows([\n            {\n                parameter: \"Project Start\",\n                value: data.hoursTracking.startDate,\n                notes: \"\"\n            },\n            {\n                parameter: \"Planned End Date\",\n                value: data.hoursTracking.plannedEndDate,\n                notes: \"\"\n            },\n            {\n                parameter: \"Projected End Date\",\n                value: data.hoursTracking.projectedEndDate,\n                notes: \"Based on current burndown rate\"\n            },\n            {\n                parameter: \"Total Budget\",\n                value: data.kpis.totalBudget,\n                notes: \"USD\"\n            },\n            {\n                parameter: \"Spent\",\n                value: data.kpis.spent,\n                notes: \"USD\"\n            },\n            {\n                parameter: \"Remaining\",\n                value: data.kpis.remaining,\n                notes: \"USD\"\n            },\n            {\n                parameter: \"Overrun Risk\",\n                value: data.kpis.risk,\n                notes: \"\"\n            },\n            {\n                parameter: \"Total Hours Allocated\",\n                value: data.hoursTracking.totalHoursAllocated,\n                notes: \"\"\n            },\n            {\n                parameter: \"Total Hours Used\",\n                value: data.hoursTracking.totalHoursUsed,\n                notes: \"\"\n            },\n            {\n                parameter: \"Hours Remaining\",\n                value: data.hoursTracking.completionMetrics.hoursRemaining,\n                notes: \"\"\n            },\n            {\n                parameter: \"Percent Complete\",\n                value: `${data.hoursTracking.completionMetrics.percentageComplete}%`,\n                notes: \"\"\n            },\n            {\n                parameter: \"Burndown Rate\",\n                value: data.hoursTracking.completionMetrics.burndownRate,\n                notes: \"Hours per week\"\n            },\n            {\n                parameter: \"Estimated Weeks Remaining\",\n                value: data.hoursTracking.completionMetrics.estimatedWeeksRemaining,\n                notes: \"\"\n            }\n        ]);\n        // Format cells\n        overviewSheet.getColumn(\"parameter\").font = {\n            bold: true\n        };\n        // Weekly Hours Sheet\n        const weeklyHoursSheet = workbook.addWorksheet(\"Weekly Hours\");\n        weeklyHoursSheet.columns = [\n            {\n                header: \"Week Ending\",\n                key: \"weekEnding\",\n                width: 15\n            },\n            {\n                header: \"Planned Hours\",\n                key: \"hoursPlanned\",\n                width: 15\n            },\n            {\n                header: \"Actual Hours\",\n                key: \"hoursActual\",\n                width: 15\n            },\n            {\n                header: \"Cumulative Planned\",\n                key: \"cumulativePlanned\",\n                width: 20\n            },\n            {\n                header: \"Cumulative Actual\",\n                key: \"cumulativeActual\",\n                width: 20\n            },\n            {\n                header: \"Hours Variance\",\n                key: \"hoursVariance\",\n                width: 15\n            }\n        ];\n        // Add weekly hours data\n        data.hoursTracking.weeklyHours.forEach((week)=>{\n            weeklyHoursSheet.addRow({\n                weekEnding: week.weekEnding,\n                hoursPlanned: week.hoursPlanned,\n                hoursActual: week.hoursActual,\n                cumulativePlanned: week.cumulativePlanned,\n                cumulativeActual: week.cumulativeActual,\n                hoursVariance: week.hoursActual - week.hoursPlanned\n            });\n        });\n        // Format with alternating row colors\n        weeklyHoursSheet.eachRow((row, rowNumber)=>{\n            if (rowNumber > 1) {\n                if (rowNumber % 2) {\n                    row.eachCell({\n                        includeEmpty: true\n                    }, (cell)=>{\n                        cell.fill = {\n                            type: \"pattern\",\n                            pattern: \"solid\",\n                            fgColor: {\n                                argb: \"F5F5F5\"\n                            }\n                        };\n                    });\n                }\n            } else {\n                // Header row\n                row.eachCell({\n                    includeEmpty: true\n                }, (cell)=>{\n                    cell.font = {\n                        bold: true\n                    };\n                    cell.fill = {\n                        type: \"pattern\",\n                        pattern: \"solid\",\n                        fgColor: {\n                            argb: \"E0E0E0\"\n                        }\n                    };\n                });\n            }\n        });\n        // Worker Hours Sheet\n        if (data.workerHours && data.workerHours.length > 0) {\n            const workerHoursSheet = workbook.addWorksheet(\"Worker Hours\");\n            workerHoursSheet.columns = [\n                {\n                    header: \"Worker Name\",\n                    key: \"workerName\",\n                    width: 15\n                },\n                {\n                    header: \"Week Ending\",\n                    key: \"weekEnding\",\n                    width: 15\n                },\n                {\n                    header: \"Monday\",\n                    key: \"monday\",\n                    width: 10\n                },\n                {\n                    header: \"Tuesday\",\n                    key: \"tuesday\",\n                    width: 10\n                },\n                {\n                    header: \"Wednesday\",\n                    key: \"wednesday\",\n                    width: 10\n                },\n                {\n                    header: \"Thursday\",\n                    key: \"thursday\",\n                    width: 10\n                },\n                {\n                    header: \"Friday\",\n                    key: \"friday\",\n                    width: 10\n                },\n                {\n                    header: \"Total Hours\",\n                    key: \"totalHours\",\n                    width: 15\n                }\n            ];\n            // Add worker hours data\n            data.workerHours.forEach((entry)=>{\n                workerHoursSheet.addRow({\n                    workerName: entry.workerName,\n                    weekEnding: entry.weekEnding,\n                    monday: entry.hours.monday,\n                    tuesday: entry.hours.tuesday,\n                    wednesday: entry.hours.wednesday,\n                    thursday: entry.hours.thursday,\n                    friday: entry.hours.friday,\n                    totalHours: entry.totalHours\n                });\n            });\n            // Format worker hours\n            workerHoursSheet.getRow(1).font = {\n                bold: true\n            };\n            workerHoursSheet.getRow(1).fill = {\n                type: \"pattern\",\n                pattern: \"solid\",\n                fgColor: {\n                    argb: \"E0E0E0\"\n                }\n            };\n        }\n        // Task Completion Sheet\n        const taskSheet = workbook.addWorksheet(\"Task Completion\");\n        taskSheet.columns = [\n            {\n                header: \"Task\",\n                key: \"task\",\n                width: 20\n            },\n            {\n                header: \"Planned %\",\n                key: \"planned\",\n                width: 15\n            },\n            {\n                header: \"Actual %\",\n                key: \"actual\",\n                width: 15\n            },\n            {\n                header: \"Variance\",\n                key: \"variance\",\n                width: 15\n            }\n        ];\n        // Add task data\n        data.schedule.forEach((task)=>{\n            taskSheet.addRow({\n                task: task.task,\n                planned: task.Planned,\n                actual: task.Actual,\n                variance: task.Actual - task.Planned\n            });\n        });\n        // Format task sheet\n        taskSheet.getRow(1).font = {\n            bold: true\n        };\n        // Issues Sheet\n        const issuesSheet = workbook.addWorksheet(\"Issues\");\n        issuesSheet.columns = [\n            {\n                header: \"Date\",\n                key: \"date\",\n                width: 15\n            },\n            {\n                header: \"System\",\n                key: \"system\",\n                width: 15\n            },\n            {\n                header: \"Issue\",\n                key: \"issue\",\n                width: 30\n            },\n            {\n                header: \"Impact\",\n                key: \"impact\",\n                width: 20\n            },\n            {\n                header: \"Accountability\",\n                key: \"accountability\",\n                width: 20\n            },\n            {\n                header: \"Consequence\",\n                key: \"consequence\",\n                width: 25\n            }\n        ];\n        // Add issues data\n        data.issues.forEach((issue)=>{\n            issuesSheet.addRow({\n                date: issue.date,\n                system: issue.system,\n                issue: issue.issue,\n                impact: issue.impact,\n                accountability: issue.accountability,\n                consequence: issue.consequence\n            });\n        });\n        // Format issues sheet\n        issuesSheet.getRow(1).font = {\n            bold: true\n        };\n        // Generate Excel file\n        const buffer = await workbook.xlsx.writeBuffer();\n        const duration = performance.now() - startTime;\n        (0,_lib_monitoringService__WEBPACK_IMPORTED_MODULE_1__.trackMetric)(\"excelExportDuration\", duration);\n        (0,_lib_monitoringService__WEBPACK_IMPORTED_MODULE_1__.trackEvent)(\"excelExport\", {\n            sheets: workbook.worksheets.map((ws)=>ws.name),\n            rows: {\n                weekly: data.hoursTracking.weeklyHours.length,\n                workers: data.workerHours ? data.workerHours.length : 0,\n                tasks: data.schedule.length,\n                issues: data.issues.length\n            }\n        });\n        // Set headers and send file\n        res.setHeader(\"Content-Type\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\n        res.setHeader(\"Content-Disposition\", `attachment; filename=Higuera-Project-Export-${new Date().toISOString().split(\"T\")[0]}.xlsx`);\n        res.status(200).send(Buffer.from(buffer));\n    } catch (error) {\n        console.error(\"Excel export error:\", error);\n        (0,_lib_monitoringService__WEBPACK_IMPORTED_MODULE_1__.trackEvent)(\"excelExportError\", {\n            message: error.message,\n            stack: error.stack\n        });\n        res.status(500).json({\n            error: error.message || \"Failed to export Excel file\"\n        });\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_lib_middleware__WEBPACK_IMPORTED_MODULE_0__.withApiAuth)(handler));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/exportExcel.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2FexportExcel&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2FexportExcel.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();